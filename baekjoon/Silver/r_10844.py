'''
[Dp] 쉬운 계단 수 (실1)
* 앞 뒤로 신경 써야함
#10 12 21 23 32 34 43 45 54 56 65 67 76 78 87 89 98

goal: n의 길이를 가진 계단 수를 구해라 -> 그 후 1,000,000,000 으로 나눈 후 '나머지 출력'
but : 그렇다고 맨 앞에 0은 올 수 x
'''

n = int(input())

# 자릿수의 갯수 (몇 개 들어가있다)
# dp[자릿수][앞에 오는 수]
dp = [[0] * (10) for _ in range(n+1)]

for i in range(1, 10):
    dp[1][i] = 1 #dp[1][1] => 1개 계단일 때 나올 수 있는 수는 1이여야함.


for i in range(2,n+1): #계단이 2개~ n개까지
    for j in range(10):
        # 1.맨 끝이 0인 자리 수 갯수 = 바로 앞자리가 1로 끝나는 자릿 수 갯수
        if j == 0:
            dp[i][j] = dp[i-1][1]
        # 2. 앞에 오는 수가 9인 자리 수 갯수 = 바로 이전(앞) 자리 수 중 8로 끝나는 수 갯수
        elif j == 9:
            dp[i][j] = dp[i-1][8]
        # 3. 그 외. (j:1~8) _ 2 -> 12 21
        # dp[i][j]의 자릿수의 갯수(나올 수 있는) = dp[i-1][j-1] + dp[i-1][j+1]
        else:
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]

print(sum(dp[n]) % 1000000000)
